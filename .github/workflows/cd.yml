name: Continuous Deployment

env:
  IMAGE_NAME: verana-front
  DH_USERNAME: ${{ secrets.DOCKER_HUB_LOGIN }}
  DH_TOKEN: ${{ secrets.DOCKER_HUB_PWD }}
  KUBECONFIG: ${{ secrets.OVH_KUBECONFIG }}
  VERANA_DEPLOY_PATH: verana-deploy
  CLUSTER_NODE: cluster-utc-node-07efe5

on:
  push:
    branches:
      - main    
    tags:
      - '*'
  workflow_dispatch:

jobs:
  publish_image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DH_USERNAME }}
          password: ${{ env.DH_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare Docker tag
        run: |
          SANITIZED_REF=${GITHUB_REF_NAME//\//-}
          echo "IMAGE_TAG=$SANITIZED_REF" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_LOGIN }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ github.ref_name == 'main' && format('{0}/{1}:latest', secrets.DOCKER_HUB_LOGIN, env.IMAGE_NAME) || '' }}


      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.29.9'

      - name: Deploy to OVH
        run: |
          echo "$KUBECONFIG" > k8s_config
          export KUBECONFIG=k8s_config

          for ENV in testnet devnet; do
            if [ "$ENV" = "testnet" ]; then
              VERANA_CHAIN_ID="vna-testnet-1"
              VERANA_CHAIN_NAME="VeranaTestnet1"
            else
              VERANA_CHAIN_ID="vna-devnet-1"
              VERANA_CHAIN_NAME="VeranaDevnet1"
            fi

            export DEPLOYMENT_NAME="verana-${ENV}-frontend-app-deployment"
            export NEXT_PUBLIC_PORT=3000
            export NEXT_PUBLIC_BASE_URL=http://localhost:2904
            export NEXT_PUBLIC_VERANA_CHAIN_ID=$VERANA_CHAIN_ID
            export NEXT_PUBLIC_VERANA_CHAIN_NAME=$VERANA_CHAIN_NAME
            export NEXT_PUBLIC_VERANA_RPC_ENDPOINT="https://rpc.${ENV}.verana.network"
            export NEXT_PUBLIC_VERANA_REST_ENDPOINT="https://api.${ENV}.verana.network"
            export NEXT_PUBLIC_VERANA_REST_ENDPOINT_GET_ACCOUNT="https://api.${ENV}.verana.network/verana/td/v1/get"
            export NEXT_PUBLIC_VERANA_REST_ENDPOINT_LIST_DID="https://api.${ENV}.verana.network/verana/dd/v1/list"
            export NEXT_PUBLIC_VERANA_REST_ENDPOINT_GET_DID="https://api.${ENV}.verana.network/verana/dd/v1/get"
            export DH_USERNAME=$DH_USERNAME
            export IMAGE_NAME=$IMAGE_NAME
            export IMAGE_TAG=$IMAGE_TAG

            echo "Deploying to $ENV ($VERANA_CHAIN_ID)..."
            kubectl delete -n $VERANA_CHAIN_ID deployment $DEPLOYMENT_NAME || true
            envsubst < kubernetes/verana-frontend-deployment.yaml > substituted-deployment.yaml
            kubectl apply -f substituted-deployment.yaml --namespace=$VERANA_CHAIN_ID
          done
